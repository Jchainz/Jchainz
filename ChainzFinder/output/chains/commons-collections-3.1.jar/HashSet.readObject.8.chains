commons-collections-3.1.jar/
CLASSPATH:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/home/daniele/IdeaProjects/Jchainz/ChainzFinder/target_jars/commons-collections-3.1.jar
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> org.apache.commons.collections.FastHashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: java.lang.Object clone() ==> java.util.HashMap: void putMapEntries(java.util.Map,boolean) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> java.util.Collections$SynchronizedMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object) ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> org.apache.commons.collections.FastHashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: java.lang.Object clone() ==> java.util.HashMap: void putMapEntries(java.util.Map,boolean) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> java.util.Collections$CheckedMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object) ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
commons-collections-3.1.jar/
CLASSPATH:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/home/daniele/IdeaProjects/Jchainz/ChainzFinder/target_jars/commons-collections-3.1.jar
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: int hash(java.lang.Object) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode() ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.CloneTransformer: java.lang.Object transform(java.lang.Object) ==> org.apache.commons.collections.functors.PrototypeFactory$PrototypeCloneFactory: java.lang.Object create() ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: int hash(java.lang.Object) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode() ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.FactoryTransformer: java.lang.Object transform(java.lang.Object) ==> org.apache.commons.collections.functors.PrototypeFactory$PrototypeCloneFactory: java.lang.Object create() ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: int hash(java.lang.Object) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode() ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.SwitchTransformer: java.lang.Object transform(java.lang.Object) ==> org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object) ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: int hash(java.lang.Object) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode() ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object) ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
java.util.HashSet: void readObject(java.io.ObjectInputStream) ==> java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object) ==> java.util.HashMap: int hash(java.lang.Object) ==> org.apache.commons.collections.keyvalue.TiedMapEntry: int hashCode() ==> org.apache.commons.collections.keyvalue.TiedMapEntry: java.lang.Object getValue() ==> org.apache.commons.collections.map.LazyMap: java.lang.Object get(java.lang.Object) ==> org.apache.commons.collections.functors.ChainedTransformer: java.lang.Object transform(java.lang.Object) ==> org.apache.commons.collections.functors.InvokerTransformer: java.lang.Object transform(java.lang.Object) ==> java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
FINISHED
